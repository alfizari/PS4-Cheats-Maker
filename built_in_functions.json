[
  {"name": "search_for", "template": "offset = search_for(start_offset, end_offset, pattern, save_data)\n"},
  {"name": "read_offset", "template": "value = read_offset(offset, save_data, length=4)\n"},
  {"name": "write_offset", "template": "write_offset(offset, value, save_data, length=4)\n"},
  {"name": "read_float", "template": "value = read_float(offset, save_data)\n"},
  {"name": "write_float", "template": "write_float(offset, value, save_data)\n"},
  {"name": "read_double", "template": "value = read_double(offset, save_data)\n"},
  {"name": "write_double", "template": "write_double(offset, value, save_data)\n"},
  {"name": "read_string", "template": "text = read_string(offset, save_data, length=None, encoding='utf-8')\n"},
  {"name": "write_string", "template": "write_string(offset, value, save_data, max_length=None, encoding='utf-8', null_terminate=True)\n"},
  {"name": "read_bool", "template": "value = read_bool(offset, save_data)\n"},
  {"name": "write_bool", "template": "write_bool(offset, value, save_data)\n"},
  {"name": "search_all", "template": "offsets = search_all(pattern, save_data)\n"},
  {"name": "replace_pattern", "template": "count = replace_pattern(pattern, replacement, save_data, count=-1)\n"},
  {"name": "create_backup", "template": "create_backup(save_data, filename='backup.sav')\n"},
  {"name": "load_save_file", "template": "save_data = load_save_file(filename)\n"},
  {"name": "save_file", "template": "save_file(filename, save_data)\n"},
  {"name": "get_checksum_crc32", "template": "checksum = get_checksum_crc32(save_data, start=0, end=None)\n"},
  {"name": "get_checksum_md5", "template": "checksum = get_checksum_md5(save_data, start=0, end=None)\n"},
  {"name": "get_checksum_md5_hex", "template": "checksum = get_checksum_md5_hex(save_data, start=0, end=None)\n"},
  {"name": "get_checksum_sha1", "template": "checksum = get_checksum_sha1(save_data, start=0, end=None)\n"},
  {"name": "get_checksum_sha1_hex", "template": "checksum = get_checksum_sha1_hex(save_data, start=0, end=None)\n"},
  {"name": "verify_checksum", "template": "is_valid = verify_checksum(save_data, expected_checksum, checksum_offset, save_data_start=0, save_data_end=None, checksum_type='crc32')\n"},
  {"name": "update_checksum", "template": "update_checksum(save_data, checksum_offset, save_data_start=0, save_data_end=None, checksum_type='crc32')\n"},
  {"name": "hex_dump", "template": "dump_text = hex_dump(save_data, offset=0, length=256, bytes_per_line=16)\n"},
  {"name": "find_value_offset", "template": "offsets = find_value_offset(value, save_data, length=4, start=0, end=None)\n"},
  {"name": "read_array", "template": "values = read_array(offset, save_data, count, element_size=4)\n"},
  {"name": "write_array", "template": "write_array(offset, values, save_data, element_size=4)\n"},
  {"name": "read_byte", "template": "value = read_byte(offset, save_data)\n"},
  {"name": "write_byte", "template": "write_byte(offset, value, save_data)\n"},
  {"name": "read_short", "template": "value = read_short(offset, save_data)\n"},
  {"name": "write_short", "template": "write_short(offset, value, save_data)\n"},
  {"name": "read_int", "template": "value = read_int(offset, save_data)\n"},
  {"name": "write_int", "template": "write_int(offset, value, save_data)\n"},
  {"name": "read_long", "template": "value = read_long(offset, save_data)\n"},
  {"name": "write_long", "template": "write_long(offset, value, save_data)\n"}
]