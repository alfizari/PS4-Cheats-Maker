name: BUILDBOT

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Windows 64-bit
            os: windows-latest
            python-architecture: 'x64'
            spec: main.spec
            artifact: Cheats_Maker_WIN64
            artifact-path: dist/

          - name: Windows 32-bit
            os: windows-latest
            python-architecture: 'x86'
            spec: main.spec
            artifact: Cheats_Maker_WIN32
            artifact-path: dist/

          - name: Linux x86_64
            os: ubuntu-latest
            python-architecture: 'x64'
            spec: main.spec
            artifact: Cheats_Maker_LINUX_x86_64
            artifact-path: dist/

          - name: macOS Silicon
            os: macos-latest
            python-architecture: 'arm64'
            spec: main.spec
            artifact: Cheats_Maker_MAC-Silicon
            artifact-path: dist/Cheats_Maker_MAC-Silicon.zip

          - name: macOS Intel
            os: macos-13
            python-architecture: 'x64'
            spec: main.spec
            artifact: Cheats_Maker_MAC-Intel
            artifact-path: dist/Cheats_Maker_MAC-Intel.zip

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          architecture: ${{ matrix.python-architecture }}

      - name: Install Dependencies
        run: pip install cryptography pyinstaller

      - name: Build Executable
        run: pyinstaller ${{ matrix.spec }}
        env:
          PYTHONPATH: ${{ runner.workspace }}/src

      # Package macOS apps into .zip
      - name: Package macOS App
        if: startsWith(matrix.os, 'macos')
        run: |
          cd dist
          APP_NAME=$(ls *.app | head -n 1)
          zip -r "${{ matrix.artifact }}.zip" "$APP_NAME"
          mv "${{ matrix.artifact }}.zip" ../

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.artifact-path }}
